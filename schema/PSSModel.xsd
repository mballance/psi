<?xml version="1.0" encoding="UTF-8"?>
<!-- 
 -->
<schema 
	xmlns="http://www.w3.org/2001/XMLSchema" 
	targetNamespace="http://accellera.org/PSS" 
	xmlns:pss="http://accellera.org/PSS" 
	elementFormDefault="qualified">

    <element name="model">
    	<complexType>
		<choice maxOccurs="unbounded" minOccurs="0">
			<element name="package" type="pss:package_declaration" />
			<element name="component" type="pss:component_declaration" />
			
			<!-- package_body_item -->
			<element name="action" type="pss:abstract_action_declaration"/>
			<element name="struct" type="pss:struct_declaration"/>
			<element name="enum" type="pss:enum_declaration"/>
			<!-- TODO:
			<element name="coverspec" type="pss:coverspec_declaration"/>
		  	-->
			<element name="import_function" type="pss:import_method_decl"/>
			<!-- TODO:
			<element name="import_class" type="pss:import_class_decl"/>
			<element name="import_method_qualifiers" type="pss:import_method_qualifiers"/>
			<element name="export_action" type="pss:export_action"/>
		  	-->
			<element name="typedef" type="pss:typedef_declaration"/>
			<!-- TODO:
			<element name="bins" type="pss:bins_declaration"/>
		  	-->
			<element name="import_stmt" type="pss:import_stmt"/>
			<element name="extend" type="pss:extend_stmt"/>			
		</choice>    	
    	</complexType>
    </element>

	<complexType name="Model">
		<choice maxOccurs="unbounded" minOccurs="0">
			<element name="package" type="pss:package_declaration" />
			<element name="component" type="pss:component_declaration" />
			
			<!-- package_body_item -->
			<element name="action" type="pss:abstract_action_declaration"/>
			<element name="struct" type="pss:struct_declaration"/>
			<element name="enum" type="pss:enum_declaration"/>
			<!-- TODO:
			<element name="coverspec" type="pss:coverspec_declaration"/>
		  	-->
			<element name="import_function" type="pss:import_method_decl"/>
			<!-- TODO:
			<element name="import_class" type="pss:import_class_decl"/>
			<element name="import_method_qualifiers" type="pss:import_method_qualifiers"/>
			<element name="export_action" type="pss:export_action"/>
		  	-->
			<element name="typedef" type="pss:typedef_declaration"/>
			<!-- TODO:
			<element name="bins" type="pss:bins_declaration"/>
		  	-->
			<element name="import_stmt" type="pss:import_stmt"/>
			<element name="extend" type="pss:extend_stmt"/>			
		</choice>
	</complexType>
    
    
	<complexType name="package_declaration">
		<choice minOccurs="0" maxOccurs="unbounded">
			<element name="action" type="pss:abstract_action_declaration"/>
			<element name="struct" type="pss:struct_declaration"/>
			<element name="enum" type="pss:enum_declaration"/>
			<!-- TODO:
			<element name="coverspec" type="pss:coverspec_declaration"/>
			-->
			<element name="import_function" type="pss:import_method_decl"/>
			<!-- TODO:
			<element name="import_class" type="pss:import_class_decl"/>
			<element name="import_method_qualifiers" type="pss:import_method_qualifiers"/>
			<element name="export_action" type="pss:export_action"/>
			-->
			<element name="typedef" type="pss:typedef_declaration"/>
			<!-- TODO:
			<element name="bins" type="pss:bins_declaration"/>
			-->
			<element name="import_stmt" type="pss:import_stmt"/>
			<element name="extend" type="pss:extend_stmt"/>
		</choice>
		<attribute name="name" type="string"/>
	</complexType>
	
	<complexType name="extend_stmt">
		<sequence minOccurs="1" maxOccurs="1">
			<element name="type" type="pss:hierarchical_id"/>
			<choice minOccurs="1" maxOccurs="1">
				<element name="action" type="pss:extend_action"/>
				<element name="struct" type="pss:extend_struct"/>
				<element name="enum" type="pss:extend_enum"/>
				<element name="component" type="pss:extend_component"/>
			</choice>
		</sequence>
	</complexType>
	
	<complexType name="extend_action">
		<complexContent>
			<extension base="pss:action_body"/>
		</complexContent>
	</complexType>
	
	<complexType name="extend_struct">
		<choice minOccurs="0" maxOccurs="unbounded">
			
			<element name="constraint" type="pss:constraint_declaration"/>
			<element name="field" type="pss:struct_field_declaration"/>
			<element name="typedef" type="pss:typedef_declaration"/>
			<!-- TODO:
			<element name="bins" type="pss:bins_declaration"/>
			<element name="coverspec" type="pss:coverspec_declaration"/>
			  -->
			<element name="exec" type="pss:exec_block_stmt"/>
		</choice>	
	</complexType>
	
	<complexType name="extend_enum">
		<complexContent>
			<extension base="pss:enum_body"/>
		</complexContent>
	</complexType>
	
	<complexType name="extend_component">
		<complexContent>
			<extension base="pss:component_body"/>
		</complexContent>
	</complexType>

	<complexType name="import_stmt">
		<complexContent>
			<extension base="pss:hierarchical_id">
				<attribute name="wildcard" type="boolean" default="false"/>
			</extension>
		</complexContent>
	</complexType>	
	
    <!-- ************************************************************
    	 * Action Declarations
         ************************************************************ -->
    <complexType name="abstract_action_declaration">
   		<complexContent>
   			<extension base="pss:action_declaration"/>
   		</complexContent> 
    </complexType>

    <complexType name="action_declaration">
    	<complexContent>
    		<extension base="pss:action_body">
		    	<attribute name="name" type="string"></attribute>
    			<attribute name="abstract" type="boolean"/>
    		</extension>
    	</complexContent>
    </complexType>
    
    <complexType name="action_body">
	   	<choice maxOccurs="unbounded" minOccurs="0">
    		<element name="super" type="pss:hierarchical_id"/>
    		
    		<element name="activity" type="pss:activity_declaration"/>
    		<!-- TODO:
    		<element name="overrides" type="pss:overrides_declaration"/>
    		-->
    		<element name="constraint" type="pss:constraint_declaration"/>
    		<element name="field" type="pss:action_field_declaration"/>
    		<!-- TODO: 
    		<element name="bins" type="pss:bins_declaration"/>
    		<element name="symbol" type="pss:symbol_declaration"/>
    		<element name="coverspec" type="pss:coverspec_declaration"/>
    		  -->
    		<element name="exec" type="pss:exec_block_stmt"/>
    	</choice>    
    </complexType>
    
    <complexType name="field_declaration">
    	<sequence minOccurs="1" maxOccurs="1">
	    	<element name="type" type="pss:data_type"/>
	    	<sequence minOccurs="0" maxOccurs="1">
	    		<element name="dim" type="pss:expression"/>
	    	</sequence>
    	</sequence>
    	<attribute name="name" type="string"/>
    </complexType>
    
    <complexType name="action_field_declaration">
    	<complexContent>
    		<extension base="pss:field_declaration">
		    	<attribute name="qualifier" use="optional">
    				<simpleType>
    					<restriction base="string">
    						<enumeration value="rand"/>
    						<enumeration value="lock"/>
    						<enumeration value="share"/>
		    				<enumeration value="input"/>
		    				<enumeration value="output"/>
    					</restriction>
    				</simpleType>
    			</attribute>    		
	    	</extension>
    	</complexContent>


    </complexType>
    
    <!-- ************************************************************
    	 * Exec Blocks
         ************************************************************ -->
	<complexType name="exec_block_stmt">
		<choice minOccurs="1" maxOccurs="1">
			<element name="block" type="pss:exec_block"/>
			<element name="code_block" type="pss:target_code_exec_block"/>
			<element name="file_block" type="pss:target_file_exec_block"/>
			<element name="inline" type="pss:inline_exec_block"/>
		</choice>
	</complexType>
	
	<complexType name="exec_block">
		<choice minOccurs="0" maxOccurs="unbounded">
			<element name="assign" type="pss:exec_body_assign_stmt"/>
			<element name="call" type="pss:method_function_call"/>
		</choice>
		<attribute name="kind">
			<simpleType>
				<restriction base="string">
					<enumeration value="body"/>
					<enumeration value="pre_solve"/>
					<enumeration value="post_solve"/>
				</restriction>
			</simpleType>
		</attribute>
	</complexType>
	
	<complexType name="exec_body_assign_stmt">
		<sequence minOccurs="1" maxOccurs="1">
			<element name="lhs" type="pss:variable_ref"/>
			<element name="rhs" type="pss:expression"/>
		</sequence>
		<attribute name="op">
			<simpleType>
				<restriction base="string">
					<enumeration value="Eq"/>
					<enumeration value="PlusEq"/>
					<enumeration value="MinusEq"/>
					<enumeration value="LShiftEq"/>
					<enumeration value="RShiftEq"/>
					<enumeration value="OrEq"/>
					<enumeration value="AndEq"/>
				</restriction>
			</simpleType>
		</attribute>
	</complexType>
	
	<complexType name="method_function_call">
		<sequence minOccurs="1" maxOccurs="1">
			<element name="function" type="pss:hierarchical_id"/>
			<choice minOccurs="0" maxOccurs="1">
				<element name="parameters" type="pss:call_parameters"/>
			</choice>
		</sequence>
	</complexType>
	
	<complexType name="call_parameters">
		<sequence minOccurs="0" maxOccurs="unbounded">
			<element name="parameter" type="pss:expression"/>
		</sequence>
	</complexType>
	
	<complexType name="target_code_exec_block">
		<simpleContent>
			<extension base="string">
				<attribute name="kind" use="required">
					<simpleType>
						<restriction base="string">
							<enumeration value="body"/>
							<enumeration value="pre_solve"/>
							<enumeration value="post_solve"/>
							<enumeration value="declaration"/>
							<!-- TODO: capture full list -->
						</restriction>
					</simpleType>
				</attribute>
				<attribute name="language" use="required"/>
			</extension>			
			
		</simpleContent>

	</complexType>
	
	<complexType name="target_file_exec_block">
		<sequence>
			<any/>
		</sequence>
		<attribute name="filename" use="required"/>
		<attribute name="kind" use="required">
			<simpleType>
				<restriction base="string">
					<enumeration value="body"/>
					<enumeration value="pre_solve"/>
					<enumeration value="post_solve"/>
					<enumeration value="declaration"/>
					<!-- TODO: capture full list -->
				</restriction>
			</simpleType>
		</attribute>
		<attribute name="language" use="required"/>
	</complexType>	
	
	<complexType name="inline_exec_block">
		<attribute name="address" use="required"/>
		<attribute name="kind" use="required">
			<simpleType>
				<restriction base="string">
					<enumeration value="body"/>
					<enumeration value="pre_solve"/>
					<enumeration value="post_solve"/>
				</restriction>
			</simpleType>
		</attribute>
	</complexType>
    
    <!-- ************************************************************
    	 * Struct Declarations
         ************************************************************ -->
	<complexType name="struct_declaration">
		<sequence minOccurs="1" maxOccurs="1">
		<sequence minOccurs="0" maxOccurs="1">
			<element name="super" type="pss:hierarchical_id"/>
		</sequence>
		<choice minOccurs="0" maxOccurs="unbounded">
			
			<element name="constraint" type="pss:constraint_declaration"/>
			<element name="field" type="pss:struct_field_declaration"/>
			<element name="typedef" type="pss:typedef_declaration"/>
			<!-- TODO:
			<element name="bins" type="pss:bins_declaration"/>
			<element name="coverspec" type="pss:coverspec_declaration"/>
			  -->
			<element name="exec" type="pss:exec_block_stmt"/>
		</choice>	
		</sequence>
        <attribute name="name" type="string"/>
        <attribute name="qualifier">
            <simpleType>
                <restriction base="string">
                    <enumeration value="memory"/>
                    <enumeration value="stream"/>
                    <enumeration value="state"/>
                    <enumeration value="resource"/>
                </restriction>
            </simpleType>
        </attribute>
	</complexType>
	
	<complexType name="struct_body">
		<choice minOccurs="0" maxOccurs="unbounded">
			
			<element name="constraint" type="pss:constraint_declaration"/>
			<element name="field" type="pss:struct_field_declaration"/>
			<element name="typedef" type="pss:typedef_declaration"/>
			<!-- TODO:
			<element name="bins" type="pss:bins_declaration"/>
			<element name="coverspec" type="pss:coverspec_declaration"/>
			  -->
			<element name="exec" type="pss:exec_block_stmt"/>
		</choice>	
	</complexType>
	
	<complexType name="struct_field_declaration">
		<complexContent>
			<extension base="pss:field_declaration">
				<attribute name="qualifier">
					<simpleType>
						<restriction base="string">
							<enumeration value="rand"/>
						</restriction>
					</simpleType>
				</attribute>			
			</extension>
		</complexContent>
	</complexType>
	
    <!-- ************************************************************
    	 * Procedural Interface
         ************************************************************ -->
	<complexType name="import_method_decl">
		<complexContent>
			<extension base="pss:method_prototype"/>
		</complexContent>
	</complexType>
	
	<complexType name="method_prototype">
		<sequence>
			<sequence minOccurs="0" maxOccurs="1">
				<element name="return" type="pss:data_type"/>
			</sequence>
			<sequence minOccurs="0" maxOccurs="1">
				<element name="parameters" type="pss:method_parameter_list"/>
			</sequence>
		</sequence>
		<attribute name="name" use="required"/>
	</complexType>
	
	<complexType name="method_parameter_list">
		<sequence minOccurs="0" maxOccurs="unbounded">
			<element name="parameter" type="pss:method_parameter"/>
		</sequence>
	</complexType>
	
	<complexType name="method_parameter">
		<sequence minOccurs="1" maxOccurs="1">
			<element name="type" type="pss:data_type"/>
		</sequence>
		<attribute name="name" type="string" use="required"/>
		<attribute name="dir">
			<simpleType>
				<restriction base="string">
					<enumeration value="input"/>
					<enumeration value="output"/>
					<enumeration value="inout"/>
				</restriction>
			</simpleType>
		</attribute>
	</complexType>
	
    <!-- ************************************************************
    	 * Component Declaration
         ************************************************************ -->
	<complexType name="component_declaration">
		<complexContent>
			<extension base="pss:component_body">
				<attribute name="name" type="string" use="required"/>
			</extension>
		</complexContent>
	</complexType>
	
	<complexType name="component_body">
		<choice minOccurs="0" maxOccurs="unbounded">
			<element name="super" type="pss:hierarchical_id"/>
		
			<!-- TODO:
			<element name="overrides" type="pss:overrides_declaration"/>
			-->
			<element name="field" type="pss:component_field_declaration"/>
			<element name="action" type="pss:action_declaration"/>
			<element name="struct" type="pss:struct_declaration"/>
			<element name="import_stmt" type="pss:import_stmt"/>
			<element name="bind" type="pss:object_bind_stmt"/>
			<element name="exec" type="pss:exec_block_stmt"/>
		</choice>	
	</complexType>
	
	<complexType name="component_field_declaration">
		<sequence minOccurs="1" maxOccurs="1">
			<element name="type" type="pss:data_type"/>
		</sequence>

		<attribute name="qualifier">
			<simpleType>
				<restriction base="string">
					<enumeration value="pool"/>
				</restriction>
			</simpleType>
		</attribute>
		<attribute name="name" type="string" use="required"/>
	</complexType>
	
	<complexType name="object_bind_stmt">
		<sequence minOccurs="1" maxOccurs="unbounded">
			<element name="bindpath" type="pss:hierarchical_id"/>
		</sequence>
	</complexType>
	
	<complexType name="object_bind_item_list">
		<sequence minOccurs="1" maxOccurs="unbounded">
			<element name="item" type="pss:hierarchical_id"/>
		</sequence>
	</complexType>
         
    <!-- ************************************************************
    	 * Graph Productions
         ************************************************************ -->
    <complexType name="activity_declaration">
    	<complexContent>
    		<extension base="pss:activity_block">
    		</extension>
    	</complexContent>
    <!-- TODO -->
    </complexType>
    
    <complexType name="activity_block">
    	<choice minOccurs="0" maxOccurs="unbounded">
    		<element name="repeat" type="pss:activity_repeat_stmt"/>
    		<element name="parallel" type="pss:activity_parallel_stmt"/>
    		<element name="select" type="pss:activity_select_stmt"/>
    		<element name="sequential" type="pss:activity_sequential_stmt"/>
    		<element name="schedule" type="pss:activity_schedule_stmt"/>
    		<element name="traverse" type="pss:activity_traverse_stmt"/>
    	</choice>
    </complexType>
    
    <complexType name="activity_repeat_stmt">
   		<sequence>
   			<sequence minOccurs="0">
    			<element name="expr" type="pss:expression"/>
   			</sequence>
   			<element name="body" type="pss:activity_block"/>
		</sequence>
		<attribute name="type">
			<simpleType>
				<restriction base="string">
					<!-- TODO: -->
					<enumeration value="count"/>
					<enumeration value="forever"/>
				</restriction>
			</simpleType>
		</attribute>
    </complexType>
    
    <complexType name="activity_parallel_stmt">
    	<sequence minOccurs="1" maxOccurs="unbounded">
    		<element name="production" type="pss:activity_labeled_production"></element>
    	</sequence>
    </complexType>
    
    <complexType name="activity_schedule_stmt">
    	<complexContent>
    		<extension base="pss:activity_block"></extension>
    	</complexContent>
    </complexType>
    
    <complexType name="activity_sequential_stmt">
    	<complexContent>
    		<extension base="pss:activity_block"></extension>
    	</complexContent>
    </complexType>
        
    <complexType name="activity_select_stmt">
    	<sequence minOccurs="2" maxOccurs="unbounded">
    		<element name="choice" type="pss:activity_labeled_production"></element>
    	</sequence>
    </complexType>
    
    <complexType name="activity_traverse_stmt">
    	<sequence minOccurs="0" maxOccurs="1">
    		<element name="with" type="pss:constraint_set"/>
    	</sequence>
    	<attribute name="name"/>
    </complexType>
    
    <complexType name="activity_labeled_production">
    	<complexContent>
    		<extension base="pss:activity_block">
    			<attribute name="label"/>
    		</extension>
    	</complexContent>
    </complexType>
    
    <!-- ************************************************************
    	 * Overrides
         ************************************************************ -->
         
    <!-- ************************************************************
    	 * Data Declarations
         ************************************************************ -->
         
    <!-- ************************************************************
    	 * Data Types
         ************************************************************ -->
	<complexType name="data_type">
		<choice minOccurs="1" maxOccurs="1">
			<element name="bool" type="pss:bool_type"/>
			<element name="chandle" type="pss:chandle_type"/>
			<element name="string" type="pss:string_type"/>
			<element name="int" type="pss:integer_type"/>
			<element name="bit" type="pss:bit_type"/>
			<element name="user" type="pss:user_defined_type"/>
		</choice>
	</complexType>
	
	<complexType name="bool_type"/>
	<complexType name="chandle_type"/>
	<complexType name="string_type"/>
	
	<complexType name="integer_type">
		<sequence minOccurs="0" maxOccurs="1">
			<element name="msb" type="pss:expression"/>
			<element name="lsb" type="pss:expression"/>
		</sequence>
	</complexType>
	
	<complexType name="bit_type">
		<sequence minOccurs="0" maxOccurs="1">
			<element name="msb" type="pss:expression"/>
			<element name="lsb" type="pss:expression"/>
		</sequence>
	</complexType>

	<!-- TODO: is this too verbose? -->
	<complexType name="user_defined_type">
		<complexContent>
			<extension base="pss:hierarchical_id"/>
		</complexContent>
	</complexType>	
	
	<complexType name="typedef_declaration">
		<complexContent>
			<extension base="pss:hierarchical_id">
				<attribute name="name" type="string" use="required"/>
			</extension>
		</complexContent>
	</complexType>
	
	<complexType name="enum_declaration">
		<complexContent>
			<extension base="pss:enum_body">
				<attribute name="name" type="string" use="required"/>
			</extension>
		</complexContent>
	</complexType>
	
	<complexType name="enum_body">
		<choice minOccurs="1" maxOccurs="unbounded">
			<element name="enumerator" type="pss:enum_item"/>
		</choice>
	</complexType>
	
	<complexType name="enum_item">
		<sequence minOccurs="0" maxOccurs="1">
			<element name="value" type="pss:expression"/>
		</sequence>
		<attribute name="name" type="string" use="required"/>
	</complexType>
    
    <!-- ************************************************************
    	 * Constraints
         ************************************************************ -->
    <complexType name="constraint_declaration">
    	<complexContent>
    		<extension base="pss:constraint_set">
		    	<attribute name="name" type="string"/>
    			<attribute name="dynamic" type="boolean" default="false"/>
    		</extension>
    	</complexContent>
    </complexType>
    
    <complexType name="constraint_set">
    	<choice minOccurs="0" maxOccurs="unbounded">
    		<element name="stmt" type="pss:expression"/>
    		<element name="if" type="pss:if_constraint_item"/>
    		<element name="block" type="pss:constraint_set"/>
    		<element name="foreach" type="pss:foreach_constraint_item"/>
    		<element name="implies" type="pss:implies_constraint_item"/>
    	</choice>
    </complexType>
    
    <complexType name="foreach_constraint_item">
    	<sequence>
    		<element name="expr" type="pss:expression"/>
    		<element name="body" type="pss:constraint_set"/>
    	</sequence>
    </complexType>
    
    <complexType name="implies_constraint_item">
    	<sequence>
    		<element name="cond" type="pss:expression"/>
    		<element name="body" type="pss:constraint_set"/>
    	</sequence>
    </complexType>
    
    <complexType name="if_constraint_item">
    	<sequence>
    		<element name="cond" type="pss:expression"/>
    		<element name="true" type="pss:constraint_set"/>
    		<sequence minOccurs="0" maxOccurs="1">
    			<element name="false" type="pss:constraint_set"/>
    		</sequence>
    	</sequence>
    </complexType>

    <!-- ************************************************************
    	 * Expressions
         ************************************************************ -->
	<complexType name="expression">
		<choice>
			<element name="binexp" type="pss:binary_expression"/>
			<element name="unexp" type="pss:unary_expression"/>
			<element name="inside" type="pss:inside_expression"/>
			<!-- Primaries -->
    		<element name="number" type="pss:number"/>
    		<element name="paren" type="pss:paren_expr"/>
    		<element name="ref" type="pss:variable_ref"/>
    		<element name="call" type="pss:method_function_call"/>
		</choice>
	</complexType>    
    
    <complexType name="binary_expression">
    	<sequence minOccurs="1" maxOccurs="1">
	    	<element name="lhs" type="pss:expression"/>
	    	<element name="rhs" type="pss:expression"/>
    	</sequence>
    	<attribute name="op" use="required">
    		<simpleType>
    			<restriction base="string">
    				<enumeration value="Eq"/>
    				<enumeration value="EqEq"/>
					<enumeration value="NotEq"/>
					<enumeration value="GE"/>
					<enumeration value="GT"/>
					<enumeration value="LE"/>
					<enumeration value="LT"/>
					<enumeration value="And"/>
					<enumeration value="AndAnd"/>
					<enumeration value="Or"/>
					<enumeration value="OrOr"/>
					<enumeration value="Minus"/>
					<enumeration value="Plus"/>
					<enumeration value="Mul"/>
					<enumeration value="Div"/>
					<enumeration value="Mod"/>
					<enumeration value="ArrRef"/>
    			</restriction>
    		</simpleType>
    	</attribute>
    </complexType>
    
    <complexType name="unary_expression">
    	<complexContent>
    		<extension base="pss:expression">
    			<attribute name="op" use="required"></attribute>
    		</extension>
    	</complexContent>
    </complexType>
    
    <complexType name="inside_expression">
    	<sequence>
    		<element name="lhs" type="pss:expression"/>
    		<element name="rhs" type="pss:open_range_list"/>
    	</sequence>
    </complexType>
    
    <complexType name="open_range_list">
    	<choice minOccurs="1" maxOccurs="unbounded">
    		<element name="value" type="pss:expression"/>
    		<element name="range" type="pss:open_range_value"/>
    	</choice>
    </complexType>
    
    <complexType name="open_range_value">
    	<sequence>
    		<element name="lhs" type="pss:expression"/>
    		<element name="rhs" type="pss:expression"/>
    	</sequence>
    </complexType>

    <complexType name="action_body_item"></complexType>
    
    <complexType name="primary">
    	<choice>
    		<element name="number" type="pss:number"/>
    		<element name="paren" type="pss:paren_expr"/>
    		<element name="ref" type="pss:variable_ref"/>
    		<!--
    		<element name="call" type="pss:method_function_call"/>
    		  -->
    	</choice>
    </complexType>
   
	<complexType name="paren_expr">
		<complexContent>
			<extension base="pss:expression"/>
		</complexContent>
	</complexType>
	
	<complexType name="variable_ref">
		<complexContent>
			<extension base="pss:hierarchical_id">
			<!--
				<sequence minOccurs="0" maxOccurs="1">
					<choice minOccurs="1" maxOccurs="1">
						<element name="lhs" type="pss:expression"/>
					</choice>
					<choice minOccurs="0" maxOccurs="1">
						<element name="rhs" type="pss:expression"/>
					</choice>
				</sequence>
			-->
			</extension>
		</complexContent>
	</complexType>
	
	<complexType name="hierarchical_id">
		<sequence minOccurs="1" maxOccurs="unbounded">
			<element name="path" type="string"/>
		</sequence>
	</complexType>
	
	<simpleType name="bool_literal">
		<restriction base="string">
			<enumeration value="true"/>
			<enumeration value="false"/>
		</restriction>
	</simpleType>
	
	<simpleType name="number">
		<restriction base="string"/>
	</simpleType>
	
</schema>

